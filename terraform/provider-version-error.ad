////
 file: terraform/provider-version-error.ad
 author: Mo Ziauddin

////


= Terraform Tutorials

:stylesheet: styles.css
:stylesdir: ../css
:toc: left
:toc-title: Failed to query available provider packages
:icons: font

include::../blog-header.ad[]

== The Issue

=== How to reproduce the issue

==== terragrunt init

When you setup a new terraform module and run `terraform init`, a couple of files are created.

. `provider.tf`
. `.terraform.lock.hcl`

[source,bash]
----
mo@localhost:/terraform/hasura$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/aws...
- Installing hashicorp/aws v3.65.0...
- Installed hashicorp/aws v3.65.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!
----

==== terragrunt plan

When you run `terragrunt plan` it leads to the below error.

[source,bash]
----
mo@localhost:/terraform/hasura$ terraform plan
Initializing the backend...

Successfully configured the backend "s3"! Terraform will automatically
use this backend unless the backend configuration changes.

│ Error: Failed to query available provider packages
│ 
│ Could not retrieve the list of available versions for provider
│ hashicorp/aws: locked provider registry.terraform.io/hashicorp/aws 3.65.0
│ does not match configured version constraint ~> 3.54.0; must use terraform
│ init -upgrade to allow selection of new versions
----

=== Investigation

It seems to be complaining about version mis-match from `3.54.0` with `3.65.0`. So, I decided to investigate looking for those version numbers.

==== provider.tf file

provider.tf has the below configuration in it.

[source,json]
----
terraform {
  required_providers {
    archive = {
      source = "hashicorp/archive"
    }
    aws = {
      version = "~> 3.54.0"
    }
  }
}
----

==== .terraform.lock.hcl file

`.terrform.lock.hcl` file has the below configuration.

[source,json]
----
provider "registry.terraform.io/hashicorp/aws" {
  version     = "3.65.0"
  constraints = "~> 3.65.0"
  ...
}
----

== Solution

I removed the `.terrform.lock.hcl` file and ran the below command.

`terraform init -upgrade`

That re-created the `.terraform.lock.hcl` file again with correct version and `terraform plan` was successful as shown below.

=== .terraform.lock.hcl file

[source,json]
----
provider "registry.terraform.io/hashicorp/aws" {
  version     = "3.54.0"
  constraints = "~> 3.54.0"
  hashes = [
    ...
  ]
}
----

=== terraform init -upgrade output

[source,bash]
----
mo@localhost:/terraform/hasura$ terraform plan
Initializing the backend...

Initializing provider plugins...
- Finding hashicorp/aws versions matching "~> 3.54.0"...
- Finding latest version of hashicorp/archive...
- Installing hashicorp/aws v3.54.0...
- Installed hashicorp/aws v3.54.0 (signed by HashiCorp)
- Installing hashicorp/archive v2.2.0...
- Installed hashicorp/archive v2.2.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.
----

=== terraform plan output

[source,bash]
----
mo@localhost:/terraform/hasura$ terraform plan

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_iam_service_linked_role.ecs_service will be created
  + resource "aws_iam_service_linked_role" "ecs_service" {
      + arn              = (known after apply)
      + aws_service_name = "ecs.amazonaws.com"
      + create_date      = (known after apply)
      + id               = (known after apply)
      + name             = (known after apply)
      + path             = (known after apply)
      + unique_id        = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.
----

== Conclusion

If you come across this issue, you can easily fix it by following this simple guide
